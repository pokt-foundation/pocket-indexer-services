// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/pokt-foundation/pocket-go/provider"
)

type AccountsResponse struct {
	Accounts   []*GraphQLAccount `json:"accounts"`
	TotalCount int               `json:"totalCount"`
	PageCount  int               `json:"pageCount"`
	Page       int               `json:"page"`
	TotalPages int               `json:"totalPages"`
}

type AppsResponse struct {
	Apps       []*GraphQLApp `json:"apps"`
	TotalCount int           `json:"totalCount"`
	PageCount  int           `json:"pageCount"`
	Page       int           `json:"page"`
	TotalPages int           `json:"totalPages"`
}

type BlocksResponse struct {
	Blocks     []*GraphQLBlock `json:"blocks"`
	TotalCount int             `json:"totalCount"`
	PageCount  int             `json:"pageCount"`
	Page       int             `json:"page"`
	TotalPages int             `json:"totalPages"`
}

type GraphQLAccount struct {
	Address             string `json:"address"`
	Height              int    `json:"height"`
	Balance             string `json:"balance"`
	BalanceDenomination string `json:"balanceDenomination"`
}

type GraphQLApp struct {
	Address      string `json:"address"`
	Height       int    `json:"height"`
	Jailed       bool   `json:"jailed"`
	PublicKey    string `json:"publicKey"`
	StakedTokens string `json:"stakedTokens"`
}

type GraphQLBlock struct {
	Hash             string    `json:"hash"`
	Height           int       `json:"height"`
	Time             time.Time `json:"time"`
	ProposerAddress  string    `json:"proposerAddress"`
	TxCount          int       `json:"txCount"`
	TxTotal          int       `json:"txTotal"`
	AccountsQuantity int       `json:"accountsQuantity"`
	AppsQuantity     int       `json:"appsQuantity"`
	NodesQuantity    int       `json:"nodesQuantity"`
	Took             string    `json:"took"`
}

type GraphQLNode struct {
	Address    string `json:"address"`
	Height     int    `json:"height"`
	Jailed     bool   `json:"jailed"`
	PublicKey  string `json:"publicKey"`
	ServiceURL string `json:"serviceURL"`
	Tokens     string `json:"tokens"`
}

type GraphQLTransaction struct {
	Hash            string             `json:"hash"`
	FromAddress     string             `json:"fromAddress"`
	ToAddress       string             `json:"toAddress"`
	AppPubKey       string             `json:"appPubKey"`
	Blockchains     []string           `json:"blockchains"`
	MessageType     string             `json:"messageType"`
	Height          int                `json:"height"`
	Index           int                `json:"index"`
	StdTx           *provider.StdTx    `json:"stdTx"`
	TxResult        *provider.TxResult `json:"txResult"`
	Tx              string             `json:"tx"`
	Entropy         string             `json:"entropy"`
	Fee             int                `json:"fee"`
	FeeDenomination string             `json:"feeDenomination"`
	Amount          string             `json:"amount"`
}

type NodesResponse struct {
	Nodes      []*GraphQLNode `json:"nodes"`
	TotalCount int            `json:"totalCount"`
	PageCount  int            `json:"pageCount"`
	Page       int            `json:"page"`
	TotalPages int            `json:"totalPages"`
}

type TransactionsResponse struct {
	Transactions []*GraphQLTransaction `json:"transactions"`
	TotalCount   int                   `json:"totalCount"`
	PageCount    int                   `json:"pageCount"`
	Page         int                   `json:"page"`
	TotalPages   int                   `json:"totalPages"`
}
