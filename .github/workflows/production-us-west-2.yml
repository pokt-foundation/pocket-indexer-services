name: Production deployment us-west-2

on:
  push:
    branches: [master]

jobs:
  deploy:
    name: Pocket Indexer Services
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR (Service)
        id: build-image-service
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: indexer-service
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.service .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Build, tag, and push image to Amazon ECR (API)
        id: build-image-api
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: indexer-api
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.api .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID / us-west-2 - service
        id: task-def-us-west-2-service
        uses: aws-actions/amazon-ecs-render-task-definition@master
        with:
          task-definition: .aws/ecs-task-definition.json
          container-name: indexer-service
          image: ${{ steps.build-image-service.outputs.image }}
          environment-variables: |
            CONNECTION_STRING=${{ secrets.CONNECTION_STRING }}
            CONCURRENCY=${{ secrets.CONCURRENCY }}
            MAIN_NODE=${{ secrets.MAIN_NODE }}
            FALLBACK_NODE=${{ secrets.FALLBACK_NODE }}
            RUN_PLAYGROUND=${{ secrets.RUN_PLAYGROUND }}

      - name: Fill in the new image ID / us-west-2 - api
        id: task-def-us-west-2-api
        uses: aws-actions/amazon-ecs-render-task-definition@master
        with:
          task-definition: ${{ steps.task-def-us-west-2-service.outputs.task-definition }}
          container-name: indexer-api
          image: ${{ steps.build-image-api.outputs.image }}
          environment-variables: |
            CONNECTION_STRING=${{ secrets.CONNECTION_STRING }}
            PORT=80

      - name: Deploy / us-west-2
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-us-west-2-api.outputs.task-definition }}
          service: indexer
          cluster: indexer
          wait-for-service-stability: true
